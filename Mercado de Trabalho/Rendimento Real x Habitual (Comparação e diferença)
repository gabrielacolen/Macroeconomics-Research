library(readxl)      # para ler .xlsx
library(dplyr)       # para manipulação
library(tidyr)       # para pivot_longer
library(lubridate)   # para converter ano-mês em Date
library(ggplot2)     # para o gráfico

# paleta de cores
cores_padrao <- c(
  azul_escuro1 = "#002C5E",
  azul_escuro2 = "#02023C",
  amarelo      = "#FEB712",
  cinza_claro  = "#A6A6A6",
  cinza_escuro = "#3A3A3A",
  azul_claro   = "#46B1E1",
  verde        = "#2E7D32"  # para o segundo tipo
)

caminho <- "C:/Users/User/Desktop/Macro/Mercado de trabalho/PNADc_IPEA.xls"

# 1. Leitura e seleção das duas séries
df <- read_excel(caminho, sheet = "MensalizadasDessazonalizadas") %>%
  select(
    anomesexato      = 1,
    rendimento_hab   = 57,   # rendimento habitual
    rendimento_real  = 58    # rendimento real
  ) %>%
  # 2. criar data e filtrar
  mutate(
    data = ymd(paste0(anomesexato, "01"))
  ) %>%
  filter(data >= as.Date("2019-01-01"),
         data <= as.Date("2025-12-01"))

# 3. pivotar para formato long
df_long <- df %>%
  pivot_longer(
    cols      = c(rendimento_hab, rendimento_real),
    names_to  = "tipo",
    values_to = "rendimento"
  ) %>%
  mutate(
    tipo = recode(tipo,
                  rendimento_hab  = "Habitual",
                  rendimento_real = "Real")
  )

# (Opcional) calcular diferença Real - Habitual
df_diff <- df %>%
  transmute(
    data      = ymd(paste0(anomesexato, "01")),
    diferenca = rendimento_real - rendimento_hab
  )

## 4a. Gráfico comparativo de linhas
p1 <- ggplot(df_long, aes(x = data, y = rendimento, color = tipo)) +
  geom_line(linewidth = 1.2) +
  scale_color_manual(
    values = c("Habitual" = cores_padrao[["azul_escuro1"]],
               "Real"     = cores_padrao[["azul_claro"]])
  ) +
  labs(
    title    = "Rendimento Habitual vs. Real",
    subtitle = "Em R$/mês, 2019–2025",
    x        = NULL,
    y        = NULL,
    color    = "Tipo",
    caption  = "Fonte: PNADc"
  ) +
  scale_x_date(
    date_breaks = "1 year",
    date_labels = "%Y",
    expand      = expansion(add = c(30, 30))
  ) +
  scale_y_continuous(expand = expansion(add = c(0.5, 0.5))) +
  theme_minimal() +
  theme(
    panel.grid.minor  = element_blank(),
    panel.background  = element_blank(),
    axis.line.x       = element_line(color = cores_padrao["cinza_claro"], linewidth = 0.5),
    axis.line.y       = element_line(color = cores_padrao["cinza_claro"], linewidth = 0.5),
    plot.title        = element_text(hjust = 0.5, size = 16, face = "bold"),
    plot.subtitle     = element_text(hjust = 0.5, size = 12, face = "italic"),
    axis.text.x       = element_text(size = 10),
    plot.caption      = element_text(hjust = 0.5, size = 10, color = "gray50"),
    legend.position   = "bottom"
  )

print(p1)

## 4b. (Opcional) Gráfico da diferença
p2 <- ggplot(df_diff, aes(x = data, y = diferenca)) +
  geom_line(color = cores_padrao["azul_escuro2"], linewidth = 1.2) +
  geom_hline(
    yintercept = mean(df_diff$diferenca, na.rm = TRUE),
    color      = cores_padrao["amarelo"],
    linetype   = "dashed",
    linewidth  = 1
  ) +
  annotate(
    "text",
    x     = as.Date("2024-06-01"),
    y     = mean(df_diff$diferenca, na.rm = TRUE) - 25,
    label = paste0("Média: ", round(mean(df_diff$diferenca, na.rm = TRUE), 2), " R$/mês"),
    color = cores_padrao["amarelo"],
    size  = 4.5,
    fontface = "bold"
  ) +
  labs(
    title   = "Diferença: Rendimento Real – Habitual",
    subtitle = "Em R$/mês, 2019–2025",
    x       = NULL,
    y       = NULL,
    caption = "Fonte: PNADc"
  ) +
  scale_x_date(
    date_breaks = "1 year",
    date_labels = "%Y"
  ) +
  scale_y_continuous(expand = expansion(mult = c(0.02, 0.05))) +
  theme_minimal() +
  theme(
    panel.grid.minor  = element_blank(),
    panel.background  = element_blank(),
    axis.line.x       = element_line(color = cores_padrao["cinza_claro"], linewidth = 0.5),
    axis.line.y       = element_line(color = cores_padrao["cinza_claro"], linewidth = 0.5),
    plot.title        = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.text.x       = element_text(hjust = 1),
    plot.subtitle     = element_text(hjust = 0.5, size = 12, face = "italic"),
    plot.caption      = element_text(hjust = 0.5, size = 10, color = "gray50")
  )

print(p2)
